> source("common.R",print.eval=TRUE)
# R version 3.4.1 (2017-06-30) # carter # FALSE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean       median          uq
 doit0(rnorm(10))     75.560     87.658    1996.968     165.3425     204.268
 doit1(rnorm(10)) 645877.039 896635.474 1262892.003 1350593.4650 1611654.742
 doit2(rnorm(10)) 527832.791 598154.930  842876.306  669477.7195 1075776.338
 doit3(rnorm(10))   3882.736   4370.936   24384.535    5831.0495   15878.446
        max neval
   18652.51    10
 1695268.94    10
 1696147.51    10
  169435.75    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq       mean   median       uq         max
 doit0(rnorm(10))   30.882   61.2875   89.64734   74.985   95.229    4233.975
 doit3(rnorm(10)) 1316.913 2191.0735 4670.91095 2719.384 3195.222 1012144.677
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr       min        lq      mean    median        uq       max
 doit0(rnorm(10))  200.4498  200.4521  200.7721  200.4898  200.5698  201.8991
 doit1(rnorm(10)) 1147.1761 1199.7083 1408.0856 1357.6673 1544.5397 1791.3369
 doit2(rnorm(10))  624.8595  658.8366  845.8948  832.5827  920.8303 1192.3648
 doit3(rnorm(10))  203.4721  203.5076  213.6408  206.1333  209.1752  245.9158
 neval
     5
     5
     5
     5
> 
> 
