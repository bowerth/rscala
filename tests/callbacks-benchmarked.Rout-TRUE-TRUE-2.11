> source("common.R",print.eval=TRUE)
# R version 3.4.1 (2017-06-30) # carter # TRUE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min          lq         mean       median          uq
 doit0(rnorm(10))     54.252     112.011     499.2896     148.2085     154.953
 doit1(rnorm(10)) 748737.675 1047930.933 1255560.2064 1290030.7425 1442283.254
 doit2(rnorm(10)) 440179.307  570970.286  875111.5706  729782.6680 1200346.536
 doit3(rnorm(10))   3138.491    5670.357   20250.0093   11676.4270   13940.529
         max neval
    3868.916    10
 1664899.583    10
 1654041.876    10
   96175.437    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min       lq      mean   median        uq       max
 doit0(rnorm(10))   31.591   65.341  144.8899   75.905   99.8735  36244.78
 doit3(rnorm(10)) 1694.824 3127.323 5897.7011 3485.382 3843.3770 960896.97
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr       min        lq      mean    median        uq       max
 doit0(rnorm(10))  200.4552  200.4841  202.3178  200.5221  201.2927  208.8347
 doit1(rnorm(10)) 1020.3776 1182.9285 1298.5273 1216.5548 1521.4930 1551.2825
 doit2(rnorm(10))  679.2172  918.9396  901.2618  922.0101  939.5209 1046.6212
 doit3(rnorm(10))  203.9735  205.7489  211.0093  206.0660  212.6424  226.6157
 neval
     5
     5
     5
     5
> 
> 
