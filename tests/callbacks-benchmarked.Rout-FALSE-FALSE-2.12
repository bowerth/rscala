> source("common.R",print.eval=TRUE)
# R version 3.4.1 (2017-06-30) # carter # FALSE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr         min          lq         mean       median          uq
 doit0(rnorm(10))      64.816      84.279     610.0989     152.5875     170.635
 doit1(rnorm(10)) 1414700.023 1674798.317 1908659.9156 1761761.4105 2125431.544
 doit2(rnorm(10))  726570.125  746003.263  870952.2340  841508.3725  958967.844
 doit3(rnorm(10))    3217.958    3698.288   17764.6049    4553.2625    6176.792
         max neval
    4937.886    10
 2748507.437    10
 1126874.197    10
  125433.886    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min       lq      mean   median        uq      max neval
 doit0(rnorm(10))   30.421   65.319  158.3051   76.599   93.6405 37665.85  1000
 doit3(rnorm(10)) 1342.154 2366.993 4452.9645 2730.568 3187.9115 75734.27  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr       min        lq      mean    median        uq       max
 doit0(rnorm(10))  200.4196  200.4904  202.5047  200.4919  204.1176  207.0041
 doit1(rnorm(10)) 1383.5480 1572.1345 1697.9774 1626.4220 1953.2633 1954.5193
 doit2(rnorm(10))  843.6079  848.5510  981.0319 1019.1579 1024.3745 1169.4685
 doit3(rnorm(10))  203.0791  203.5927  204.0802  203.8866  204.2593  205.5832
 neval
     5
     5
     5
     5
> 
> 
