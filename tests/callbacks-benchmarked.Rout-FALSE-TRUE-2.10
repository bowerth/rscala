> source("common.R",print.eval=TRUE)
# R version 3.4.1 (2017-06-30) # carter # FALSE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr       min         lq        mean      median         uq
 doit0(rnorm(10))     67.71     86.390    560.6664    160.1425    190.432
 doit1(rnorm(10)) 444648.26 704752.597 840535.2054 838960.6530 981040.763
 doit2(rnorm(10)) 324407.75 360208.387 542197.1092 511802.7040 620097.022
 doit3(rnorm(10))   3014.59   3176.899  41294.5956   4710.7950  12133.390
         max neval
    4381.568    10
 1230898.527    10
 1065080.998    10
  351638.656    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min       lq      mean    median       uq       max
 doit0(rnorm(10))   30.833   65.870   89.8824   78.5895   99.377  7546.184
 doit3(rnorm(10)) 1387.601 2585.849 5060.1360 2923.6635 3581.075 69430.545
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq      max neval
 doit0(rnorm(10)) 200.4177 200.4744 202.6284 200.5986 200.8285 210.8227     5
 doit1(rnorm(10)) 615.6155 649.7849 714.7941 662.4927 774.1001 871.9772     5
 doit2(rnorm(10)) 434.1688 527.0550 564.7233 546.8232 632.1788 683.3905     5
 doit3(rnorm(10)) 203.3218 203.4244 214.6785 203.6283 213.5715 249.4467     5
> 
> 
