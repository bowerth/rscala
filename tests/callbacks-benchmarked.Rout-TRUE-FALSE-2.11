> source("common.R",print.eval=TRUE)
# R version 3.4.1 (2017-06-30) # becker # TRUE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq        mean     median          uq
 doit0(rnorm(10))     78.191    118.035    661.3414    158.611     170.728
 doit1(rnorm(10)) 629925.900 648813.351 917662.2083 954178.526 1046814.534
 doit2(rnorm(10)) 355645.316 481336.625 633369.8004 548969.485  749125.477
 doit3(rnorm(10))   3870.643   5607.554  30289.1170   6008.272   16134.603
         max neval
    5339.082    10
 1207750.384    10
 1280988.760    10
  201355.695    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq       mean    median       uq        max
 doit0(rnorm(10))   31.307   58.5475   81.13369   72.3735  100.806   1937.524
 doit3(rnorm(10)) 1659.637 2678.9720 4818.23589 3349.8305 3707.881 540632.694
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq     mean   median       uq       max neval
 doit0(rnorm(10)) 200.4151 200.4486 200.5017 200.4501 200.5302  200.6646     5
 doit1(rnorm(10)) 757.4573 776.7918 909.9835 964.4889 984.2698 1066.9099     5
 doit2(rnorm(10)) 467.3445 531.9893 717.2018 783.3243 856.8490  946.5021     5
 doit3(rnorm(10)) 204.9562 205.1053 206.8620 206.8950 208.4051  208.9484     5
> 
> 
