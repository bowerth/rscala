> source("common.R",print.eval=TRUE)
# R version 3.4.1 (2017-06-30) # carter # TRUE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr         min          lq        mean      median          uq
 doit0(rnorm(10))      54.348      95.218     597.116     148.091     163.127
 doit1(rnorm(10)) 1175355.003 1403203.384 1625325.868 1480334.181 1765390.214
 doit2(rnorm(10))  549454.696  726999.551  840102.847  817439.255  907439.559
 doit3(rnorm(10))    4006.371    6734.059   26029.935   14600.052   33271.125
         max neval
    4847.987    10
 2316986.081    10
 1259540.995    10
   90291.551    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq      mean   median       uq      max neval
 doit0(rnorm(10))   30.678   65.8215  130.1611   82.055  103.026 22057.12  1000
 doit3(rnorm(10)) 1804.287 3083.4965 6415.2637 3579.593 4458.785 91607.28  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr       min        lq      mean    median        uq       max
 doit0(rnorm(10))  200.4374  200.4393  200.5275  200.4404  200.5247  200.7957
 doit1(rnorm(10)) 1400.4310 1460.5260 1681.9078 1798.2487 1818.0031 1932.3303
 doit2(rnorm(10))  822.9036  823.6745  972.2102  881.4792 1107.8126 1225.1808
 doit3(rnorm(10))  204.0145  204.5744  216.6123  209.2505  226.0910  239.1310
 neval
     5
     5
     5
     5
> 
> 
