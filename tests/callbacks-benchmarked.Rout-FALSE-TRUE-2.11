> source("common.R",print.eval=TRUE)
# R version 3.4.1 (2017-06-30) # carter # FALSE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq       mean      median         uq
 doit0(rnorm(10))     78.394     79.995     529.51     168.378     191.96
 doit1(rnorm(10)) 770197.912 797996.105 1222452.80 1023316.971 1661417.10
 doit2(rnorm(10)) 517326.209 688572.897  806546.48  797493.600  973161.21
 doit3(rnorm(10))   2281.381   3413.372   25760.90    9414.166   30215.32
         max neval
    4001.127    10
 1906257.356    10
 1096339.721    10
  124997.268    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min        lq       mean    median      uq        max
 doit0(rnorm(10))   29.591   58.1035   81.24497   72.5965   92.84   4205.171
 doit3(rnorm(10)) 1321.892 2081.1080 4438.25672 2663.0860 3031.14 494520.615
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min        lq      mean    median        uq       max
 doit0(rnorm(10)) 200.5213  200.5361  201.5827  200.5748  201.5446  204.7365
 doit1(rnorm(10)) 862.6030 1205.5544 1394.4326 1448.9053 1725.7244 1729.3756
 doit2(rnorm(10)) 875.0334  895.0131  973.6497  960.3242  960.7800 1177.0977
 doit3(rnorm(10)) 203.2783  204.1684  205.5438  204.2282  206.2779  209.7660
 neval
     5
     5
     5
     5
> 
> 
