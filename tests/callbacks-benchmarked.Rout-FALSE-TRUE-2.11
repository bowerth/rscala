> source("common.R",print.eval=TRUE)
# R version 3.4.1 (2017-06-30) # becker # FALSE # TRUE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr        min         lq         mean     median          uq
 doit0(rnorm(10))     54.921    100.583     538.4347    151.578     169.589
 doit1(rnorm(10)) 691778.747 802597.185 1044412.5354 888612.891 1277104.702
 doit2(rnorm(10)) 416817.989 520513.684  648244.9161 586381.439  737354.244
 doit3(rnorm(10))   1929.223   2791.741   10709.2376   3283.959    3474.407
         max neval
    4239.889    10
 1591941.227    10
 1176040.448    10
   79533.370    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min       lq       mean   median       uq        max
 doit0(rnorm(10))   33.695   64.204   81.57848   75.293   99.865    241.515
 doit3(rnorm(10)) 1182.454 2223.760 3849.03185 2737.677 3023.062 663630.626
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr      min       lq      mean    median        uq       max
 doit0(rnorm(10)) 200.4469 200.4913  202.1087  200.5058  202.5285  206.5709
 doit1(rnorm(10)) 809.6744 966.5071 1044.6831 1116.9387 1139.2128 1191.0827
 doit2(rnorm(10)) 569.6739 772.4988  787.1673  814.6534  879.6654  899.3451
 doit3(rnorm(10)) 203.2915 203.4290  204.3897  203.8224  204.8857  206.5199
 neval
     5
     5
     5
     5
> 
> 
