> source("common.R",print.eval=TRUE)
# R version 3.4.1 (2017-06-30) # becker # TRUE # FALSE
> set.seed(924234)
> 
> 
> sleep.time <- 0
> f <- function(x) { Sys.sleep(sleep.time); mean(x) }
> g <- function(x) { Sys.sleep(sleep.time); sd(x) }
> 
> 
> 
> # Native R code implementation
> doit0 <- function(x) {
+   y <- 2*x
+   c(f(y),g(y))
+ }
> 
> doit0(rnorm(10))
[1] 0.1013462 1.4964630
> 
> 
> 
> # Single callback in interpreted code.
> doit1 <- function(x) {
+   s$x <- x
+   s %@% 'R.set("y",x.map(2*_))'
+   c(s %~% 'R.evalD0("f(y)")',
+     s %~% 'R.evalD0("g(y)")')
+ }
> 
> doit1(rnorm(10))
[1] 0.6360252 2.5355099
> 
> 
> 
> # Multiple callbacks in interpreted code.
> doit2 <- function(x) {
+   s$x <- x
+   s %~% '
+     R.set("y",x.map(2*_))
+     Array(R.evalD0("f(y)"),
+           R.evalD0("g(y)"))
+   '
+ }
> 
> doit2(rnorm(10))
[1] -0.163821  1.921544
> 
> 
> 
> 
> # Multiple callbacks in compiled code.
> doit3 <- function(x=numeric()) s %!% '
+   R.set("y",x.map(2*_))
+   Array(R.evalD0("f(y)"),
+         R.evalD0("g(y)"))
+ '
> 
> doit3(rnorm(10))
[1] 0.1105979 2.3994832
> 
> 
> 
> 
> # Benchmarks
> 
> library(microbenchmark)
> 
> sleep.time <- 0
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=10
+ )
Unit: microseconds
             expr         min          lq         mean      median          uq
 doit0(rnorm(10))      84.561     129.392     676.7317     151.294     179.896
 doit1(rnorm(10)) 1006662.773 1085899.386 1207975.6263 1166571.286 1266901.006
 doit2(rnorm(10))  518068.062  584153.440  685420.3334  629489.343  670839.571
 doit3(rnorm(10))    2726.733    4257.202   15274.2782    4749.158    5975.608
         max neval
    5468.639    10
 1705427.173    10
 1243814.524    10
   94035.086    10
> microbenchmark(
+   doit0(rnorm(10)),
+   #doit1(rnorm(10)),
+   #doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=1000
+ )
Unit: microseconds
             expr      min       lq       mean    median        uq       max
 doit0(rnorm(10))   31.855   55.445   85.27419   70.2455   96.5385  2728.513
 doit3(rnorm(10)) 1469.315 2216.055 4027.62452 3292.7765 3822.4815 57972.187
 neval
  1000
  1000
> 
> 
> sleep.time <- 0.1
> microbenchmark(
+   doit0(rnorm(10)),
+   doit1(rnorm(10)),
+   doit2(rnorm(10)),
+   doit3(rnorm(10)),
+   times=5
+ )
Unit: milliseconds
             expr       min        lq      mean    median        uq       max
 doit0(rnorm(10))  200.4269  200.4632  200.4638  200.4663  200.4755  200.4868
 doit1(rnorm(10)) 1091.4922 1152.2804 1194.1375 1173.6155 1216.3588 1336.9406
 doit2(rnorm(10))  658.3796  700.0113  719.6532  733.1152  734.2396  772.5203
 doit3(rnorm(10))  203.8705  204.2117  204.3687  204.3888  204.4546  204.9179
 neval
     5
     5
     5
     5
> 
> 
